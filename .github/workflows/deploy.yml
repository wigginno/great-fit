name: CI / CD

on:
  push:
    branches: [ "main", "ci-cd-pipeline" ]

permissions:
  id-token: write  # allow GitHub OIDC to assume AWS role
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1          # adjust if you use a different region
      ECR_REPOSITORY: great-fit      # must match the ECR repo created by CDK

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        shell: bash
        run: |
          set -euo pipefail
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "$ECR_REPOSITORY" \
                --image-scanning-configuration scanOnPush=true

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk@2

      - name: Deploy Infrastructure (CDK)
        working-directory: infra
        run: |
          pip install -r requirements.txt
          cdk deploy --require-approval never
